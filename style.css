* {
  box-sizing: border-box;
  background-color: black;
  color: white;
}
body {
  margin: 0;
  padding: 1rem;
  font-family: sans-serif;
}

main {
  max-width: 600px;
  width: 100%;
  margin: auto;
  height: 100%;
  overflow: hidden;
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  gap: 0.5rem;
}

#title {
  position: relative;
}
#historyButton {
  position: absolute;
  top: 0;
  right: 0;
  border: none;
  font-size: 28px;
}
#history {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 4px;
}

.dialog form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 1rem;
}

#endDialog #game {
  text-align: center;
}

.dialog button {
  font-size: 1rem;
}
.dialog::backdrop {
  background: rgba(0, 0, 0, 0.5);
}
p {
  margin: 0;
  text-align: center;
}

h1, h2 {
  text-align: center;
  text-transform: uppercase;
  margin: 0;
}

.board {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  row-gap: 0.5rem;
  column-gap: 0.1rem;
  justify-content: flex-start;
  align-self: center;
}

.cell {
  border: 0.125rem lightgray solid;
  width: 4rem;
  height: 4rem;
  text-transform: capitalize;
  font-size: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-user-select: none; /* Safari */
  user-select: none;
}

.cell.animated {
  transition: background-color 0.8s;
}

.word-row {
  display: contents;
}
.nonexistent .cell {
  background-color: lightpink;
  transition: none;
}
.existent .cell {
  background-color: lightblue;
  transition: none;
}

.cell.bad, .key .bad {
  background-color: gray;
  color: white;
}
.cell.good, .key .good {
  background-color: orange;
  color: white;
}
.good.position {
  background-color: green;
  color: white;
}

.cell.animated:nth-child(5n + 1) {
  transition-delay: 0s;
}
.cell.animated:nth-child(5n + 2) {
  transition-delay: 0.4s;
}
.cell.animated:nth-child(5n + 3) {
  transition-delay: 0.8s;
}
.cell.animated:nth-child(5n + 4) {
  transition-delay: 1.2s;
}
.cell.animated:nth-child(5n + 5) {
  transition-delay: 1.6s;
}

.key {
  flex-grow: 1;
  border-radius: 4px;
  background-color: gray;
  color: white;
  line-height: 0;
  position: relative;
  -webkit-user-select: none; /* Safari */
  user-select: none;
  cursor: pointer;
}
.key::after {
  content: "";
  padding-top: 150%;
  display: block;
}

.cursor {
  animation-name: cursorblink;
  animation-duration: 1.25s;
  animation-iteration-count: infinite;
}
@keyframes cursorblink {
  0% {  background-color: black;}
  50% { background-color: #9999;}
  100 { background-color: black;}
}

.key > div {
  position: absolute;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: lightgray;
  color: black;
  text-transform: uppercase;
  border-radius: 0.25em;
}
.key > div:active {
  border-style: inset;
}
.row {
  display: flex;
  flex-direction: row;
  justify-content: stretch;
  gap: 0.25rem;
  min-height: 0;
  flex-grow: 1;
}

.keyboard {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 0.5rem;
}
.key.enter, .key.del {
  flex-grow: 1.5;
  font-size: 12px;
}
.row.with-spacers::before, .row.with-spacers::after {
  flex-grow: 0.5;
  content: "";
}
.key.enter::after, .key.del::after {
  display: none;
}


